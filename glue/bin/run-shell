#!/bin/bash
set -e

if [ $(id -u) != 0 ] && [ ! -v DISPLAY ] && ! snapctl is-connected login-session-control; then
  echo "ERROR: You need one of: root, a DISPLAY, or to connect the login-session-control interface."
  echo ""
  echo "To connect the interfaces and add to the login menu:"
  echo "  /snap/confined-shell/current/bin/setup.sh"
  exit 1
fi

if ! snapctl is-connected desktop-launch; then
  echo "ERROR: You need to connect the desktop-launch interface."
  echo ""
  echo "To connect the interfaces and add to the login menu:"
  echo "  /snap/confined-shell/current/bin/setup.sh"
  exit 1
fi

if ! snapctl is-connected hardware-observe; then
  echo "ERROR: You need to connect the hardware-observe interface."
  echo ""
  echo "To connect the interfaces and add to the login menu:"
  echo "  /snap/confined-shell/current/bin/setup.sh"
  exit 1
fi

export XDG_RUNTIME_DIR="$(dirname $XDG_RUNTIME_DIR)"
mkdir -p "$XDG_RUNTIME_DIR" -m 700
mkdir -p "$XDG_CACHE_HOME"

miriway_config="$SNAP_USER_DATA/.config/miriway-shell.config"
yambar_config="$SNAP_USER_DATA/.config/yambar/config.yml"

[ ! -d "$SNAP_USER_DATA/.config" ] && mkdir "$SNAP_USER_DATA/.config" -m 700

# Ensure we have a config file with the fixed options
cat <<EOT > "${miriway_config}"
shell-ctrl-alt=a:wofi --show drun --location top_left
shell-meta=a:wofi --show drun --location top_left
shell-component=wayland-launch swaybg -i /snap/${SNAP_INSTANCE_NAME}/current/usr/share/backgrounds/warty-final-ubuntu.png
shell-component=wayland-launch yambar
app-env-amend=XCURSOR_THEME=DMZ-White
cursor-theme=DMZ-White

meta=Left:@dock-left
meta=Right:@dock-right
meta=Space:@toggle-maximized
meta=Home:@workspace-begin
meta=End:@workspace-end
meta=Page_Up:@workspace-up
meta=Page_Down:@workspace-down
ctrl-alt=BackSpace:@exit
EOT

# Ensure we have a config file with the fixed options
mkdir -p -m 700 "$(dirname "${yambar_config}")"
cat <<EOT > "${yambar_config}"
awesome: &awesome Font Awesome 6 Free:style=solid:pixelsize=14
ubuntu: &ubuntu Font Ubuntu 6 Free:style=solid:pixelsize=14

bar:
  location: top
  height: 21
  background: 282828ff
  font: *ubuntu

  left:
    - label:
        content:
          string:
            text: " start"
            margin: 5
            on-click: wofi --show drun --location top_left
            deco: &greybg
              background:
                color: 3f3f3fff

  center:
    - clock:
        content:
          - string:
              margin: 5
              text: "{date} {time}"
              deco: *greybg

  right:
EOT

for wificard in /sys/class/net/wl*
do cat <<EOT >> "${yambar_config}"
    - network:
        name: $(basename "$wificard")
        content:
          map:
            deco: *greybg
            margin: 5
            default: {string: {text: , font: *awesome}}
            conditions:
              state == down: {string: {text: , font: *awesome}}
              state == up:
                map:
                  default:
                    - string: {text: , font: *awesome, deco: *greybg}
#                    - string: {text: "{ssid} {dl-speed:mb}/{ul-speed:mb} Mb/s" }

                  conditions:
                    ipv4 == "":
                      - string: {text: , font: *awesome}
#                      - string: {text: "{ssid} {dl-speed:mb}/{ul-speed:mb} Mb/s"}
EOT
done

for battery in /sys/class/power_supply/BAT*
do cat <<EOT >> "${yambar_config}"
    - battery:
        name: $(basename "$battery")
        anchors:
          discharging: &discharging
            list:
              items:
                - ramp:
                    tag: capacity
                    items:
                      - string: {text: , foreground: ff0000ff, font: *awesome}
                      - string: {text: , foreground: ffa600ff, font: *awesome}
                      - string: {text: , font: *awesome}
                      - string: {text: , font: *awesome}
                      - string: {text: , font: *awesome}
                      - string: {text: , font: *awesome}
                      - string: {text: , font: *awesome}
                      - string: {text: , font: *awesome}
                      - string: {text: , font: *awesome}
                      - string: {text: , foreground: 00ff00ff, font: *awesome}
                - string: {text: "{capacity}% {estimate}"}
        content:
          map:
            deco: *greybg
            margin: 5
            conditions:
              state == unknown:
                <<: *discharging
              state == discharging:
                <<: *discharging
              state == charging:
                - string: {text: , foreground: 00ff00ff, font: *awesome}
                - string: {text: "{capacity}% {estimate}"}
              state == full:
                - string: {text: , foreground: 00ff00ff, font: *awesome}
                - string: {text: "{capacity}% full"}
              state == "not charging":
                - ramp:
                    tag: capacity
                    items:
                      - string: {text:  , foreground: ff0000ff, font: *awesome}
                      - string: {text:  , foreground: ffa600ff, font: *awesome}
                      - string: {text:  , foreground: 00ff00ff, font: *awesome}
                      - string: {text:  , foreground: 00ff00ff, font: *awesome}
                      - string: {text:  , foreground: 00ff00ff, font: *awesome}
                      - string: {text:  , foreground: 00ff00ff, font: *awesome}
                      - string: {text:  , foreground: 00ff00ff, font: *awesome}
                      - string: {text:  , foreground: 00ff00ff, font: *awesome}
                      - string: {text:  , foreground: 00ff00ff, font: *awesome}
                      - string: {text:  , foreground: 00ff00ff, font: *awesome}
                - string: {text: "{capacity}%"}
EOT
done

cd "$HOME"

exec $@

